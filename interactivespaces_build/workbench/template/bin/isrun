#!/bin/bash -e

TARGET=$PWD

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  SOURCE="$(readlink "$SOURCE")"
done

EXEDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
LIBDIR=$EXEDIR/../lib

export INTERACTIVESPACES_HOME=${INTERACTIVESPACES_HOME:-$EXEDIR/../..}
INTERACTIVESPACES_ROUTER=${INTERACTIVESPACES_ROUTER:-standalone}

CMD=${1:-run}

RUNDIR=$TARGET/run
POSTFIX=
INSTANCE_SUFFIX=
COUNT=0
LSOFWC=1
while [ $LSOFWC -gt 0 ]; do
  PIDFILE=$RUNDIR$POSTFIX/run/interactivespaces.pid
  LSOFWC=`lsof -t $PIDFILE 2> /dev/null | wc -l`
  if [ $LSOFWC -gt 0 ]; then
    COUNT=$((COUNT + 1))
    INSTANCE_SUFFIX=-$COUNT
    POSTFIX=/instance$INSTANCE_SUFFIX
  fi
done
RUNDIR=$RUNDIR$POSTFIX
echo Rundir is $RUNDIR

JDLINE="suspend=y,address=5005"
CONFIGDIR=test
CDIR=$INTERACTIVESPACES_HOME/controller
WDIR=$INTERACTIVESPACES_HOME/workbench

# TODO(keith): consider older controllers. If no extras/standalone folder could copy the standalone
# from cec-common the old way.

export ISDEBUG=n
if [ $CMD == "debug" ]; then
  export ISSUSPEND=y
  export ISDEBUG=y
  export ISCOUNT=$COUNT
fi

mkdir -p $RUNDIR

#TODO(keith): get rid of when log4j fully moved to proper location in config/
LIBSYSJAVA=lib/system/java
LOG4J_PROPERTIES=$CDIR/$LIBSYSJAVA/log4j.properties
if [ -x $LOG4J_PROPERTIES ]; then
  mkdir -p $RUNDIR/$LIBSYSJAVA
  cp -a $LOG4J_PROPERTIES $RUNDIR/$LIBSYSJAVA
fi


echo Starting up activity...
export INTERACTIVESPACES_MAIN_ARGS="--runtime=$RUNDIR"
INTERACTIVESPACES_MAIN_ARGS+=" --config=${CDIR}/config"
INTERACTIVESPACES_MAIN_ARGS+=" --bootstrap=${CDIR}/extras/standalone"
INTERACTIVESPACES_MAIN_ARGS+=" -Dinteractivespaces.controller.mode=standalone"
INTERACTIVESPACES_MAIN_ARGS+=" -Dinteractivespaces.service.mail.receiver.enable=false"
INTERACTIVESPACES_MAIN_ARGS+=" -Dinteractivespaces.standalone.activity.runtime=$RUNDIR"
INTERACTIVESPACES_MAIN_ARGS+=" -Dinteractivespaces.standalone.activity.source=$TARGET"
INTERACTIVESPACES_MAIN_ARGS+=" -Dinteractivespaces.standalone.activity.config=$TARGET/$CONFIGDIR"
INTERACTIVESPACES_MAIN_ARGS+=" -Dinteractivespaces.standalone.instance=$INSTANCE_SUFFIX"
INTERACTIVESPACES_MAIN_ARGS+=" -Dinteractivespaces.standalone.router.type=${INTERACTIVESPACES_ROUTER}"
INTERACTIVESPACES_MAIN_ARGS+=" -Dspace.activity.webapp.debug=true"

echo $INTERACTIVESPACES_MAIN_ARGS

# Change the tab title.
ACTIVITY_NAME=`xmllint --xpath "/project/name/text()" "$TARGET/project.xml"`
PS1=
printf "\033]0;IS: $ACTIVITY_NAME\007"

CONTROLLER_EXE=$CDIR/bin/isstartup

# TODO(keith) Decide whether or not to support pre-1.8 controllers.
#if [ ! -x $CONTROLLER_EXE ]; then
#  # The startup_linux.bash is legacy, and can be removed when only 1.8.0+ is supported.
#  CONTROLLER_EXE=$CDIR/bin/startup_linux.bash
#fi
  
$CONTROLLER_EXE | ${WDIR}/bin/islog
 

